{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lauta\\\\Desktop\\\\clima\\\\my-wheater\\\\src\\\\componentes\\\\Datetime.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Datetime = () => {\n  _s();\n\n  const [date, setDate] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  useEffect(() => {\n    setInterval(() => {\n      const showdate = new Date();\n      const localTime = showdate.getTime();\n      const offset = showdate.getTimezoneOffset() * 60000;\n      const utc = localTime + offset;\n      setHour(showdate.toLocaleTimeString());\n      setDate(showdate.toDateString());\n    }, 1000);\n  }, []);\n  /*const data=()=>{\r\n    const showdate= new Date();\r\n  const localTime= showdate.getTime();\r\n  const offset= showdate.getTimezoneOffset() * 60000;\r\n  const utc= localTime + offset;\r\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Datetime, \"m2Ik8Xo8Mzc7Nnu2mLfKELePpKc=\");\n\n_c = Datetime;\nexport default Datetime;\n\nvar _c;\n\n$RefreshReg$(_c, \"Datetime\");","map":{"version":3,"names":["React","useState","useEffect","Datetime","date","setDate","hour","setHour","setInterval","showdate","Date","localTime","getTime","offset","getTimezoneOffset","utc","toLocaleTimeString","toDateString"],"sources":["C:/Users/lauta/Desktop/clima/my-wheater/src/componentes/Datetime.jsx"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nconst Datetime= ()=> {\r\n\r\nconst[date,setDate]=useState(\"\");\r\nconst[hour,setHour]=useState(\"\");\r\nuseEffect(()=>{\r\n  \r\nsetInterval(() =>{\r\n  \r\nconst showdate= new Date();\r\nconst localTime= showdate.getTime();\r\nconst offset= showdate.getTimezoneOffset() * 60000;\r\nconst utc= localTime + offset;\r\nsetHour(showdate.toLocaleTimeString());\r\nsetDate(showdate.toDateString())\r\n},1000)\r\n\r\n},[])\r\n\r\n\r\n/*const data=()=>{\r\n  const showdate= new Date();\r\nconst localTime= showdate.getTime();\r\nconst offset= showdate.getTimezoneOffset() * 60000;\r\nconst utc= localTime + offset;\r\n}*/\r\n\r\nreturn (\r\n    <div>\r\n    \r\n    </div>\r\n    );\r\n}\r\n  export default Datetime;\r\n  "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;;;AACA,MAAMC,QAAQ,GAAE,MAAK;EAAA;;EAErB,MAAK,CAACC,IAAD,EAAMC,OAAN,IAAeJ,QAAQ,CAAC,EAAD,CAA5B;EACA,MAAK,CAACK,IAAD,EAAMC,OAAN,IAAeN,QAAQ,CAAC,EAAD,CAA5B;EACAC,SAAS,CAAC,MAAI;IAEdM,WAAW,CAAC,MAAK;MAEjB,MAAMC,QAAQ,GAAE,IAAIC,IAAJ,EAAhB;MACA,MAAMC,SAAS,GAAEF,QAAQ,CAACG,OAAT,EAAjB;MACA,MAAMC,MAAM,GAAEJ,QAAQ,CAACK,iBAAT,KAA+B,KAA7C;MACA,MAAMC,GAAG,GAAEJ,SAAS,GAAGE,MAAvB;MACAN,OAAO,CAACE,QAAQ,CAACO,kBAAT,EAAD,CAAP;MACAX,OAAO,CAACI,QAAQ,CAACQ,YAAT,EAAD,CAAP;IACC,CARU,EAQT,IARS,CAAX;EAUC,CAZQ,EAYP,EAZO,CAAT;EAeA;AACA;AACA;AACA;AACA;AACA;;EAEA,oBACI;IAAA;IAAA;IAAA;EAAA,QADJ;AAKC,CA/BD;;GAAMd,Q;;KAAAA,Q;AAgCJ,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}