{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lauta\\\\Desktop\\\\clima\\\\my-wheater\\\\src\\\\componentes\\\\Datetime.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Datetime = () => {\n  _s();\n\n  const [date, setDate] = useState(\"\");\n  const [hour, setHour] = useState(\"\");\n  useEffect(() => {\n    const timezone = async () => {\n      const api = await fetch(\"http://api.timezonedb.com/v2.1/get-time-zone\");\n      const dos = await api.json();\n      console.log(d);\n    };\n\n    setInterval(() => {\n      const showdate = new Date();\n      setHour(showdate.toLocaleTimeString());\n      setDate(showdate.toDateString());\n    }, 1000);\n    timezone();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [hour, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), date]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Datetime, \"m2Ik8Xo8Mzc7Nnu2mLfKELePpKc=\");\n\n_c = Datetime;\nexport default Datetime;\n\nvar _c;\n\n$RefreshReg$(_c, \"Datetime\");","map":{"version":3,"names":["React","useState","useEffect","Datetime","date","setDate","hour","setHour","timezone","api","fetch","dos","json","console","log","d","setInterval","showdate","Date","toLocaleTimeString","toDateString"],"sources":["C:/Users/lauta/Desktop/clima/my-wheater/src/componentes/Datetime.jsx"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nconst Datetime= ()=> {\r\n\r\nconst[date,setDate]=useState(\"\");\r\nconst[hour,setHour]=useState(\"\");\r\n\r\nuseEffect(()=>{\r\n  const timezone= async()=>{\r\n    const api=  await fetch(\"http://api.timezonedb.com/v2.1/get-time-zone\");\r\n    const dos= await api.json();\r\n    console.log(d)\r\n    \r\n  }\r\nsetInterval(() =>{\r\n  \r\nconst showdate= new Date();\r\nsetHour(showdate.toLocaleTimeString());\r\nsetDate(showdate.toDateString())\r\n},1000)\r\ntimezone()\r\n},[])\r\n\r\n\r\n\r\nreturn (\r\n    <div>\r\n      {hour}<br/>\r\n      {date}\r\n    </div>\r\n    );\r\n}\r\n  export default Datetime;\r\n  "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;;;AACA,MAAMC,QAAQ,GAAE,MAAK;EAAA;;EAErB,MAAK,CAACC,IAAD,EAAMC,OAAN,IAAeJ,QAAQ,CAAC,EAAD,CAA5B;EACA,MAAK,CAACK,IAAD,EAAMC,OAAN,IAAeN,QAAQ,CAAC,EAAD,CAA5B;EAEAC,SAAS,CAAC,MAAI;IACZ,MAAMM,QAAQ,GAAE,YAAS;MACvB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAAvB;MACA,MAAMC,GAAG,GAAE,MAAMF,GAAG,CAACG,IAAJ,EAAjB;MACAC,OAAO,CAACC,GAAR,CAAYC,CAAZ;IAED,CALD;;IAMFC,WAAW,CAAC,MAAK;MAEjB,MAAMC,QAAQ,GAAE,IAAIC,IAAJ,EAAhB;MACAX,OAAO,CAACU,QAAQ,CAACE,kBAAT,EAAD,CAAP;MACAd,OAAO,CAACY,QAAQ,CAACG,YAAT,EAAD,CAAP;IACC,CALU,EAKT,IALS,CAAX;IAMAZ,QAAQ;EACP,CAdQ,EAcP,EAdO,CAAT;EAkBA,oBACI;IAAA,WACGF,IADH,eACQ;MAAA;MAAA;MAAA;IAAA,QADR,EAEGF,IAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMC,CA7BD;;GAAMD,Q;;KAAAA,Q;AA8BJ,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}